{"version":3,"sources":["components/Header.jsx","context/AppReducer.js","context/globalState.js","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/TransactionForm.jsx","App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","liClassName","text","Math","abs","onClick","TransactionList","key","TransactionForm","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c964edf9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => (\n  <div className=\"\">\n    <h3>Expense Tracker</h3>\n  </div>\n);\n\nexport default Header;\n","export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n  transactions: [],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n\n  function addTransaction(id) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: id,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { Fragment, useContext } from \"react\";\nimport { GlobalContext } from \"../context/globalState\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <Fragment>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </Fragment>\n  );\n};\n\nexport default Balance;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/globalState\";\n\nconst IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">+{income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">-{expense}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/globalState\";\n\nconst Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n  const liClassName = transaction.amount < 0 ? \"minus\" : \"plus\";\n  return (\n    <li className={liClassName}>\n      {transaction.text}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction.id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default Transaction;\n","import React, { Fragment, useContext } from \"react\";\nimport Transaction from \"./Transaction\";\nimport { GlobalContext } from \"../context/globalState\";\n\nconst TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n  return (\n    <Fragment>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default TransactionList;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/globalState\";\n\nconst TransactionForm = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 1000000000),\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <Fragment>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />s (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default TransactionForm;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport TransactionForm from \"./components/TransactionForm\";\n\nimport { GlobalProvider } from \"./context/globalState\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <TransactionForm />\n      </div>\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}